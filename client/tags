!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
INIT_CLIENT_NUM	protocol.h	10;"	d
MAX_MES_LEN	protocol.h	11;"	d
MAX_NAME_LEN	protocol.h	9;"	d
MAX_PACKET_LEN	protocol.h	12;"	d
PROTOCOL_H	protocol.h	7;"	d
P_C2S_LOGIN	protocol.h	/^    P_C2S_LOGIN,$/;"	e	enum:__anon1
P_C2S_LOGOUT	protocol.h	/^    P_C2S_LOGOUT,$/;"	e	enum:__anon1
P_C2S_MES_ALL	protocol.h	/^    P_C2S_MES_ALL,$/;"	e	enum:__anon1
P_PROTOCOL_NUM	protocol.h	/^    P_PROTOCOL_NUM$/;"	e	enum:__anon1
P_S2C_LOGIN_RESPONE	protocol.h	/^    P_S2C_LOGIN_RESPONE,$/;"	e	enum:__anon1
P_S2C_LOGOUT	protocol.h	/^    P_S2C_LOGOUT,$/;"	e	enum:__anon1
P_S2C_MES_ALL	protocol.h	/^    P_S2C_MES_ALL,$/;"	e	enum:__anon1
P_S2C_NEW_LOGIN	protocol.h	/^    P_S2C_NEW_LOGIN,$/;"	e	enum:__anon1
P_S2C_UPDATE_FRIENDLIST	protocol.h	/^    P_S2C_UPDATE_FRIENDLIST,$/;"	e	enum:__anon1
bzero	client_handler.h	7;"	d
client	protocol.h	/^struct client{$/;"	s
client::isUsed	protocol.h	/^    bool isUsed;$/;"	m	struct:client	access:public
client::name	protocol.h	/^    char name[MAX_NAME_LEN];$/;"	m	struct:client	access:public
clientVector	protocol.h	/^struct clientVector{$/;"	s
clientVector::pOnlineClient	protocol.h	/^    struct client* pOnlineClient;$/;"	m	struct:clientVector	typeref:struct:clientVector::client	access:public
clientVector::size	protocol.h	/^    int size;$/;"	m	struct:clientVector	access:public
createInputNameThread	client_handler.cpp	/^void createInputNameThread()$/;"	f	signature:()
createInputNameThread	client_handler.h	/^void createInputNameThread();$/;"	p	signature:()
createListenCmdThread	client_handler.cpp	/^void createListenCmdThread()$/;"	f	signature:()
createListenCmdThread	client_handler.h	/^void createListenCmdThread();$/;"	p	signature:()
dest_name	protocol.h	/^    char dest_name[MAX_NAME_LEN];$/;"	m	struct:p_sc_mes_all	access:public
init	client_handler.cpp	/^void init(int argc,char **argv)$/;"	f	signature:(int argc,char **argv)
init	client_handler.h	/^void init(int argc,char **argv);$/;"	p	signature:(int argc,char **argv)
inputMes	client_handler.cpp	/^void inputMes(string dest)$/;"	f	signature:(string dest)
inputMes	client_handler.h	/^void inputMes(std::string);$/;"	p	signature:(std::string)
inputName	client_handler.cpp	/^void * inputName(void *arg)$/;"	f	signature:(void *arg)
inputName	client_handler.h	/^void * inputName(void*);$/;"	p	signature:(void*)
inputNameThreadId	main_client.cpp	/^ pthread_t inputNameThreadId;$/;"	v
isSuccess	protocol.h	/^    bool isSuccess;$/;"	m	struct:p_sc_login_respone	access:public
isUsed	protocol.h	/^    bool isUsed;$/;"	m	struct:client	access:public
listenCmd	client_handler.cpp	/^void * listenCmd(void* arg)$/;"	f	signature:(void* arg)
listenCmd	client_handler.h	/^void * listenCmd(void*);$/;"	p	signature:(void*)
main	main_client.cpp	/^ int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
mes	protocol.h	/^    char mes[MAX_MES_LEN];$/;"	m	struct:p_sc_mes_all	access:public
message	protocol.h	/^    char message[MAX_MES_LEN];$/;"	m	struct:p_cs_mes_all	access:public
mutex	main_client.cpp	/^ pthread_mutex_t mutex;$/;"	v
name	protocol.h	/^    char name[MAX_NAME_LEN];$/;"	m	struct:client	access:public
name	protocol.h	/^    char name[MAX_NAME_LEN];$/;"	m	struct:p_cs_logout	access:public
name	protocol.h	/^    char name[MAX_NAME_LEN];$/;"	m	struct:p_sc_logout	access:public
name	protocol.h	/^    char name[MAX_NAME_LEN];$/;"	m	struct:p_sc_new_login	access:public
name	protocol.h	/^   char name[MAX_NAME_LEN];$/;"	m	struct:p_cs_login	access:public
objects	Makefile	/^objects=main_client.o client_handler.o process_protocol.o$/;"	m
onSCLoginResponse	process_protocol.cpp	/^void onSCLoginResponse(p_base *ptr)$/;"	f	signature:(p_base *ptr)
onSCLoginResponse	process_protocol.h	/^void onSCLoginResponse(p_base* ptr);$/;"	p	signature:(p_base* ptr)
onSCLogout	process_protocol.cpp	/^void onSCLogout(p_base *ptr)$/;"	f	signature:(p_base *ptr)
onSCLogout	process_protocol.h	/^void onSCLogout(p_base *ptr);$/;"	p	signature:(p_base *ptr)
onSCMesAll	process_protocol.cpp	/^void onSCMesAll(p_base *ptr)$/;"	f	signature:(p_base *ptr)
onSCMesAll	process_protocol.h	/^void onSCMesAll(p_base *ptr);$/;"	p	signature:(p_base *ptr)
onSCNewLogin	process_protocol.cpp	/^void onSCNewLogin(p_base *ptr)$/;"	f	signature:(p_base *ptr)
onSCNewLogin	process_protocol.h	/^void onSCNewLogin(p_base *ptr);$/;"	p	signature:(p_base *ptr)
onSCUpdateFriendList	process_protocol.cpp	/^void onSCUpdateFriendList(p_base *ptr)$/;"	f	signature:(p_base *ptr)
onSCUpdateFriendList	process_protocol.h	/^void onSCUpdateFriendList(p_base *ptr);$/;"	p	signature:(p_base *ptr)
onlineClient	protocol.h	/^    struct client onlineClient[];$/;"	m	struct:p_sc_update_friendList	typeref:struct:p_sc_update_friendList::client	access:public
onlineVec	main_client.cpp	/^ struct clientVector onlineVec;$/;"	v	typeref:struct:clientVector
pOnlineClient	protocol.h	/^    struct client* pOnlineClient;$/;"	m	struct:clientVector	typeref:struct:clientVector::client	access:public
p_base	protocol.h	/^    p_base(int name,int len):pname(name),plen(len)$/;"	f	struct:p_base	access:public	signature:(int name,int len)
p_base	protocol.h	/^struct p_base{$/;"	s
p_base::p_base	protocol.h	/^    p_base(int name,int len):pname(name),plen(len)$/;"	f	struct:p_base	access:public	signature:(int name,int len)
p_base::plen	protocol.h	/^    int plen;$/;"	m	struct:p_base	access:public
p_base::pname	protocol.h	/^    int pname;$/;"	m	struct:p_base	access:public
p_cs_login	protocol.h	/^   p_cs_login():p_base(P_C2S_LOGIN,sizeof(p_cs_login))$/;"	f	struct:p_cs_login	access:public	signature:()
p_cs_login	protocol.h	/^struct p_cs_login:public p_base{$/;"	s	inherits:p_base
p_cs_login::name	protocol.h	/^   char name[MAX_NAME_LEN];$/;"	m	struct:p_cs_login	access:public
p_cs_login::p_cs_login	protocol.h	/^   p_cs_login():p_base(P_C2S_LOGIN,sizeof(p_cs_login))$/;"	f	struct:p_cs_login	access:public	signature:()
p_cs_logout	protocol.h	/^    p_cs_logout():p_base(P_C2S_LOGOUT,sizeof(p_cs_logout))$/;"	f	struct:p_cs_logout	access:public	signature:()
p_cs_logout	protocol.h	/^struct p_cs_logout:public p_base{$/;"	s	inherits:p_base
p_cs_logout::name	protocol.h	/^    char name[MAX_NAME_LEN];$/;"	m	struct:p_cs_logout	access:public
p_cs_logout::p_cs_logout	protocol.h	/^    p_cs_logout():p_base(P_C2S_LOGOUT,sizeof(p_cs_logout))$/;"	f	struct:p_cs_logout	access:public	signature:()
p_cs_mes_all	protocol.h	/^    p_cs_mes_all():p_base(P_C2S_MES_ALL,sizeof(p_cs_mes_all))$/;"	f	struct:p_cs_mes_all	access:public	signature:()
p_cs_mes_all	protocol.h	/^struct p_cs_mes_all:public p_base{$/;"	s	inherits:p_base
p_cs_mes_all::message	protocol.h	/^    char message[MAX_MES_LEN];$/;"	m	struct:p_cs_mes_all	access:public
p_cs_mes_all::p_cs_mes_all	protocol.h	/^    p_cs_mes_all():p_base(P_C2S_MES_ALL,sizeof(p_cs_mes_all))$/;"	f	struct:p_cs_mes_all	access:public	signature:()
p_cs_mes_all::src_name	protocol.h	/^    char src_name[MAX_NAME_LEN];$/;"	m	struct:p_cs_mes_all	access:public
p_sc_login_respone	protocol.h	/^    p_sc_login_respone():p_base(P_S2C_LOGIN_RESPONE,sizeof(p_sc_login_respone))$/;"	f	struct:p_sc_login_respone	access:public	signature:()
p_sc_login_respone	protocol.h	/^struct p_sc_login_respone:public p_base{$/;"	s	inherits:p_base
p_sc_login_respone::isSuccess	protocol.h	/^    bool isSuccess;$/;"	m	struct:p_sc_login_respone	access:public
p_sc_login_respone::p_sc_login_respone	protocol.h	/^    p_sc_login_respone():p_base(P_S2C_LOGIN_RESPONE,sizeof(p_sc_login_respone))$/;"	f	struct:p_sc_login_respone	access:public	signature:()
p_sc_logout	protocol.h	/^    p_sc_logout():p_base(P_S2C_LOGOUT,sizeof(p_sc_logout))$/;"	f	struct:p_sc_logout	access:public	signature:()
p_sc_logout	protocol.h	/^struct p_sc_logout:public p_base{$/;"	s	inherits:p_base
p_sc_logout::name	protocol.h	/^    char name[MAX_NAME_LEN];$/;"	m	struct:p_sc_logout	access:public
p_sc_logout::p_sc_logout	protocol.h	/^    p_sc_logout():p_base(P_S2C_LOGOUT,sizeof(p_sc_logout))$/;"	f	struct:p_sc_logout	access:public	signature:()
p_sc_mes_all	protocol.h	/^    p_sc_mes_all():p_base(P_S2C_MES_ALL,sizeof(p_sc_mes_all))$/;"	f	struct:p_sc_mes_all	access:public	signature:()
p_sc_mes_all	protocol.h	/^struct p_sc_mes_all:public p_base{$/;"	s	inherits:p_base
p_sc_mes_all::dest_name	protocol.h	/^    char dest_name[MAX_NAME_LEN];$/;"	m	struct:p_sc_mes_all	access:public
p_sc_mes_all::mes	protocol.h	/^    char mes[MAX_MES_LEN];$/;"	m	struct:p_sc_mes_all	access:public
p_sc_mes_all::p_sc_mes_all	protocol.h	/^    p_sc_mes_all():p_base(P_S2C_MES_ALL,sizeof(p_sc_mes_all))$/;"	f	struct:p_sc_mes_all	access:public	signature:()
p_sc_new_login	protocol.h	/^    p_sc_new_login():p_base(P_S2C_NEW_LOGIN,sizeof(p_sc_new_login))$/;"	f	struct:p_sc_new_login	access:public	signature:()
p_sc_new_login	protocol.h	/^struct p_sc_new_login:public p_base{$/;"	s	inherits:p_base
p_sc_new_login::name	protocol.h	/^    char name[MAX_NAME_LEN];$/;"	m	struct:p_sc_new_login	access:public
p_sc_new_login::p_sc_new_login	protocol.h	/^    p_sc_new_login():p_base(P_S2C_NEW_LOGIN,sizeof(p_sc_new_login))$/;"	f	struct:p_sc_new_login	access:public	signature:()
p_sc_update_friendList	protocol.h	/^    p_sc_update_friendList():p_base(P_S2C_UPDATE_FRIENDLIST,sizeof(p_sc_update_friendList))$/;"	f	struct:p_sc_update_friendList	access:public	signature:()
p_sc_update_friendList	protocol.h	/^struct p_sc_update_friendList:public p_base{$/;"	s	inherits:p_base
p_sc_update_friendList::onlineClient	protocol.h	/^    struct client onlineClient[];$/;"	m	struct:p_sc_update_friendList	typeref:struct:p_sc_update_friendList::client	access:public
p_sc_update_friendList::p_sc_update_friendList	protocol.h	/^    p_sc_update_friendList():p_base(P_S2C_UPDATE_FRIENDLIST,sizeof(p_sc_update_friendList))$/;"	f	struct:p_sc_update_friendList	access:public	signature:()
p_sc_update_friendList::size	protocol.h	/^    int size;$/;"	m	struct:p_sc_update_friendList	access:public
plen	protocol.h	/^    int plen;$/;"	m	struct:p_base	access:public
pname	protocol.h	/^    int pname;$/;"	m	struct:p_base	access:public
protocolHandler	client_handler.h	/^typedef void (*protocolHandler)(p_base*);$/;"	t
protocolHandler	main_client.cpp	/^typedef void (*protocolHandler)(p_base *);$/;"	t	file:
protocol_handler_array	main_client.cpp	/^ protocolHandler protocol_handler_array[P_PROTOCOL_NUM];$/;"	v
recvPacket	client_handler.cpp	/^void recvPacket()$/;"	f	signature:()
recvPacket	client_handler.h	/^void recvPacket(); $/;"	p	signature:()
servaddr	main_client.cpp	/^ struct sockaddr_in servaddr;$/;"	v	typeref:struct:sockaddr_in
size	protocol.h	/^    int size;$/;"	m	struct:clientVector	access:public
size	protocol.h	/^    int size;$/;"	m	struct:p_sc_update_friendList	access:public
sockfd	main_client.cpp	/^ int sockfd;$/;"	v
src_name	protocol.h	/^    char src_name[MAX_NAME_LEN];$/;"	m	struct:p_cs_mes_all	access:public
user_name	main_client.cpp	/^ char user_name[MAX_NAME_LEN];$/;"	v
